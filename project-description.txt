The elevator can be used on a building with any number of floors, but for the sake of model simplicity, you can think of only one floor at the beginningand then account for other cases.The controller has to have the following minimum capabilities:?A user can call the elevator from any given floor (a total of 4 floors –Ground through 3rd) to go either up or down, but special cases have to be considered(i.e. Ground and 3rd). The elevator is called to go to the given direction by pressing the appropriate button.?The elevator will be sent a GoUpor GoDownsignal to go to the appropriate direction and signal the elevator to move. When none of these two signals areHigh, the elevator is in a Waitstate until a call to go to a given floor is made.?Once the elevator reaches the desired floor, it stops and waits for 1s until it has latched onto the exit doors. A sound will be made (signal Sound= 1) when the elevator has reached the correct floor. The exit doors will open when a control signal DoorOpenis sent from the controller. Closing and opening doors takes 1 second.?The elevator will move at the speed of 5 seconds per floor. All floors will have a light indicator (store this in register X19) that will be “illuminated” when the elevator is at a given floor.Update this value as needed.?An IR (signal IRon) beam will be used to determine when to close the door and go to user’s desired floor. The IR beam will be ON after the doors are open and turn off with every person moving into the elevator. Once it detects that no more movement is present, it will turn ON for 2 seconds. If there’s no additional movement after (i.e. IR is ON), then the controller will send a signal DoorCloseto close the doors.?Once a user chooses a floor, thefloor button selection will be recorded in a memory location (assume 0x1000) by latching it with a MemWritesignal when the user presses the given button.The index of the current write location will be stored in register X20.The system will be able to take a new or additional floor selection at any point when a floor selection button is pushed(i.e. when there is at least one person in the elevator). The new floor destination(s) will be stored at sequential incrementing locations from the base address. The controller has to go through all floor entriesin the order they were pressed. After the requests are fulfilled, the elevator will go to 1stfloor and wait for new user input.
?The system should also allow firefighters access by having a special keythat allows for all the features an elevator performs in normal operating mode, but also an additional feature: if an elevator is stopped at a given floor, the door is not automatically open –the firefighter has to push the “Door Open” button. The door will stay open, i.e. IR is disabled, as long as the firefighter does not push the “Door Close” button.?The system will go into this “firefighter” mode at any time that a key is inserted into the keyhole(i.e. this input has the highest priority). The elevator will stop any current action (e.g. going up/down to a certain floor, responding to a call, etc)and go to the floor where the firefighter called the elevator with the key. Your model has to account for the time spent in moving from current location to the nearest floor and then the usual time to move between floors. E.g.: if the elevatoris going up and is located at 60% above 1stfloor when the firefighter calls it to the Ground floor, the elevator will account for the 3seconds it would take to get to 1stfloor and then the 5 seconds from 1stto Ground.?Time evaluations are done in 1 second increments (think of it as a clock running at 1Hz, or taking in new inputs once per second). If a user pushes a button or any other signal changes values after the system records and evaluates inputs and states, the new change will be recorded/acknowledged in the next evaluation.